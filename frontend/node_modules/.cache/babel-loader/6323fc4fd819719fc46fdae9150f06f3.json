{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vani\\\\Documents\\\\GitHub\\\\FYM\\\\frontend\\\\src\\\\components\\\\navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { Dropdown } from 'react-bootstrap/';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setUser } from '../actions';\nimport axios from 'axios';\nimport { getFromStorage } from '../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nav() {\n  _s();\n\n  const user = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const profileOnClick = () => {\n    history.push('/user/' + user.currentUser.username);\n  };\n\n  const [isClicked, setIsClicked] = useState(false); // user dropdown clicked state\n\n  const location = useLocation();\n  useEffect(() => {\n    // verifies current user on mount\n    // in nav since nav is in every page\n    const obj = getFromStorage('fym');\n\n    if (obj && obj.token) {\n      const {\n        token\n      } = obj;\n      axios.get('/account/verify?token=' + token).then(res => {\n        if (res.data.success) {\n          // write user to redux store\n          dispatch(setUser(res.data.user));\n        } else {\n          dispatch(setUser());\n        }\n      });\n    }\n  }, []); // browse options\n\n  function browseClick() {\n    history.push('/browse');\n  } // logout request\n\n\n  function logout() {\n    const obj = getFromStorage('fym');\n\n    if (obj && obj.token) {\n      const {\n        token\n      } = obj;\n      axios.post('/account/logout?token=' + token).then(res => {\n        if (res.data.success) {\n          // remove user from redux store\n          dispatch(setUser()); // reload page\n\n          window.location.reload(false);\n        }\n      });\n    }\n  } // dropdown menu if users logged in\n\n\n  function userDropdown() {\n    return (\n      /*#__PURE__*/\n      // used Dropdown from React Bootstrap because for some reason the native one wouldn't work\n      _jsxDEV(Dropdown, {\n        className: \"w-100\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"warning\",\n          id: \"dropdown\",\n          className: \"profile-dropdown no-caret p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-around pl-3 p-2\",\n            onClick: () => {\n              setIsClicked(!isClicked);\n            },\n            children: [user.currentUser.username, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: // sets correct arrow based on click state\n              isClicked ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"1.2em\",\n                height: \"1.2em\",\n                viewBox: \"0 0 16 16\",\n                className: \"bi bi-chevron-down\",\n                fill: \"currentColor\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"1.2em\",\n                height: \"1.2em\",\n                viewBox: \"0 0 16 16\",\n                className: \"bi bi-chevron-up\",\n                fill: \"currentColor\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          className: \"w-100\",\n          align: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Header, {\n            className: \"text-info\",\n            children: user.currentUser.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => profileOnClick(),\n            children: \"My Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => logout(),\n            className: \"text-danger\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)]\n      }, 'user-dropdown', true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: true,\n    appear: true,\n    timeout: 600,\n    classNames: \"fade\",\n    unmountOnExit: true,\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-dark bg-darken-4\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"navbar-brand ml-5 pt-1 pb-1\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge\",\n            children: \"FYM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-nav mr-5 ml-2 pb-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn browse-dropdown no-caret btn-dark-yellow\",\n          onClick: () => browseClick(),\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"1.2em\",\n            height: \"1.2em\",\n            viewBox: \"0 0 16 16\",\n            class: \"bi bi-list\",\n            fill: \"currentColor\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M2.5 11.5A.5.5 0 0 1 3 11h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 3h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), ' ', \"Browse\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-nav ml-auto mr-5 pt-1 pb-1\",\n        children: user.currentUser ? userDropdown() : /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-dark-yellow\",\n            disabled: location.pathname == '/login',\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)\n        }, 'login-button', false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Nav, \"ajL/14OF3gZlovqkmY6XhBFfXSQ=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useLocation];\n});\n\n_c = Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["C:/Users/Vani/Documents/GitHub/FYM/frontend/src/components/navbar.jsx"],"names":["React","useEffect","useState","Link","useHistory","useLocation","CSSTransition","Dropdown","useSelector","useDispatch","setUser","axios","getFromStorage","Nav","user","state","userReducer","dispatch","history","profileOnClick","push","currentUser","username","isClicked","setIsClicked","location","obj","token","get","then","res","data","success","browseClick","logout","post","window","reload","userDropdown","Name","pathname"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { Dropdown } from 'react-bootstrap/';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setUser } from '../actions';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { getFromStorage } from '../utils/storage';\r\n\r\nexport default function Nav() {\r\n    const user = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const profileOnClick = () => {\r\n        history.push('/user/' + user.currentUser.username);\r\n    };\r\n    const [isClicked, setIsClicked] = useState(false); // user dropdown clicked state\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        // verifies current user on mount\r\n        // in nav since nav is in every page\r\n        const obj = getFromStorage('fym');\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj;\r\n\r\n            axios.get('/account/verify?token=' + token).then((res) => {\r\n                if (res.data.success) {\r\n                    // write user to redux store\r\n                    dispatch(setUser(res.data.user));\r\n                } else {\r\n                    dispatch(setUser());\r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    // browse options\r\n    function browseClick() {\r\n        history.push('/browse');\r\n    }\r\n\r\n    // logout request\r\n    function logout() {\r\n        const obj = getFromStorage('fym');\r\n\r\n        if (obj && obj.token) {\r\n            const { token } = obj;\r\n\r\n            axios.post('/account/logout?token=' + token).then((res) => {\r\n                if (res.data.success) {\r\n                    // remove user from redux store\r\n                    dispatch(setUser());\r\n                    // reload page\r\n                    window.location.reload(false);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // dropdown menu if users logged in\r\n    function userDropdown() {\r\n        return (\r\n            // used Dropdown from React Bootstrap because for some reason the native one wouldn't work\r\n            <Dropdown className='w-100' key='user-dropdown'>\r\n                <Dropdown.Toggle\r\n                    variant='warning'\r\n                    id='dropdown'\r\n                    className='profile-dropdown no-caret p-0'>\r\n                    <div\r\n                        className='d-flex justify-content-around pl-3 p-2'\r\n                        onClick={() => {\r\n                            setIsClicked(!isClicked);\r\n                        }}>\r\n                        {user.currentUser.username}\r\n                        <div>\r\n                            {\r\n                                // sets correct arrow based on click state\r\n                                isClicked ? (\r\n                                    <svg\r\n                                        width='1.2em'\r\n                                        height='1.2em'\r\n                                        viewBox='0 0 16 16'\r\n                                        className='bi bi-chevron-down'\r\n                                        fill='currentColor'\r\n                                        xmlns='http://www.w3.org/2000/svg'>\r\n                                        <path\r\n                                            fillRule='evenodd'\r\n                                            d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'\r\n                                        />\r\n                                    </svg>\r\n                                ) : (\r\n                                    <svg\r\n                                        width='1.2em'\r\n                                        height='1.2em'\r\n                                        viewBox='0 0 16 16'\r\n                                        className='bi bi-chevron-up'\r\n                                        fill='currentColor'\r\n                                        xmlns='http://www.w3.org/2000/svg'>\r\n                                        <path\r\n                                            fillRule='evenodd'\r\n                                            d='M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z'\r\n                                        />\r\n                                    </svg>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu className='w-100' align='right'>\r\n                    <Dropdown.Header className='text-info'>\r\n                        {user.currentUser.Name}\r\n                    </Dropdown.Header>\r\n                    <Dropdown.Item onClick={() => profileOnClick()}>\r\n                        My Profile\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider></Dropdown.Divider>\r\n                    <Dropdown.Item\r\n                        onClick={() => logout()}\r\n                        className='text-danger'>\r\n                        Logout\r\n                    </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            timeout={600}\r\n            classNames='fade'\r\n            unmountOnExit>\r\n            <nav className='navbar navbar-expand-lg navbar-dark bg-darken-4'>\r\n                <Link to='/' className='navbar-brand ml-5 pt-1 pb-1'>\r\n                    <h3>\r\n                        <span className='badge'>FYM</span>\r\n                    </h3>\r\n                </Link>\r\n                <div className='navbar-nav mr-5 ml-2 pb-1'>\r\n                <button className='btn browse-dropdown no-caret btn-dark-yellow' onClick={() => browseClick()}>\r\n                    <svg\r\n                        width='1.2em'\r\n                        height='1.2em'\r\n                        viewBox='0 0 16 16'\r\n                        class='bi bi-list'\r\n                        fill='currentColor'\r\n                        xmlns='http://www.w3.org/2000/svg'>\r\n                        <path\r\n                            fillRule='evenodd'\r\n                            d='M2.5 11.5A.5.5 0 0 1 3 11h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 3h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z'\r\n                        />\r\n                    </svg>{' '}\r\n                    Browse</button>\r\n                </div>\r\n                <div className='navbar-nav ml-auto mr-5 pt-1 pb-1'>\r\n                    {user.currentUser ? (\r\n                        userDropdown()\r\n                    ) : (\r\n                        <Link to='/login' key='login-button'>\r\n                            <button\r\n                                className='btn btn-dark-yellow'\r\n                                disabled={location.pathname == '/login'}>\r\n                                Login\r\n                            </button>\r\n                        </Link>\r\n                    )}\r\n                </div>\r\n            </nav>\r\n        </CSSTransition>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}