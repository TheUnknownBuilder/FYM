{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vani\\\\Documents\\\\GitHub\\\\FYM\\\\frontend\\\\src\\\\components\\\\movie-row.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieCard from './movie-card';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieRow(props) {\n  _s();\n\n  const user = useSelector(state => state.userReducer);\n  const scrollable = /*#__PURE__*/React.createRef(); // movie row ref\n\n  const [movies, setMovies] = useState([]); // movies state\n\n  const [width, setWidth] = useState(0); // screen width state\n\n  const [buttonsHidden, setButtonsHidden] = useState(false); // hidden state of scroll buttons\n\n  const [movieCount, setMovieCount] = useState(0); // movie count\n\n  useEffect(() => {\n    if (props.movies) {\n      // make movies request with given movie ids and setstate\n      axios.get('/movies/' + props.movies).then(response => {\n        setMovies(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      // make movies request with given params and setstate\n      axios.get('/movies', {\n        params: props.params\n      }).then(response => {\n        setMovies(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    updateWindowDimensions(); // resize event listener to get width of row\n\n    window.addEventListener('resize', updateWindowDimensions);\n    return () => {\n      window.removeEventListener('resize', updateWindowDimensions);\n    };\n  }, [props.movies]);\n  useEffect(() => {\n    setWidth(scrollable.current.clientWidth);\n    setMovieCount(scrollable.current.childElementCount);\n    setButtonsHidden(scrollable.current.clientWidth < window.innerWidth - 200);\n  }, [scrollable]); // update width of row\n\n  function updateWindowDimensions() {\n    if (scrollable.current) {\n      setWidth(scrollable.current.clientWidth);\n    }\n  } // scroll function for row\n\n\n  function scroll(offset) {\n    updateWindowDimensions();\n\n    if (scrollable.current) {\n      scrollable.current.scrollLeft += offset;\n    }\n  } // set scroll function for row\n\n\n  function setScroll(offset) {\n    if (scrollable.current) {\n      scrollable.current.scrollLeft = offset;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"w-75 text-warning d-flex align-items-start\",\n        onClick: () => {\n          setScroll(0);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), props.shouldCount && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-4 badge badge-pill badge-warning\",\n          children: movieCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center justify-content-between movie-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn mr-2 arrow btn-dark-yellow p-1\",\n          hidden: buttonsHidden,\n          onClick: () => {\n            scroll(-width);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"1.8em\",\n            height: \"1.5em\",\n            viewBox: \"0 0 16 16\",\n            className: \"bi bi-chevron-left\",\n            fill: \"currentColor\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: scrollable,\n          className: buttonsHidden ? 'movie-list pb-4 ml-5 overflow-hidden' : 'movie-list pb-4',\n          children: movies.map(function (currentMovie, i) {\n            return /*#__PURE__*/_jsxDEV(MovieCard, {\n              movie: currentMovie\n            }, props.title + currentMovie._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn ml-2 arrow btn-dark-yellow p-1\",\n          hidden: buttonsHidden,\n          onClick: () => {\n            scroll(width);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"1.8em\",\n            height: \"1.5em\",\n            viewBox: \"0 0 16 16\",\n            className: \"bi bi-chevron-right\",\n            fill: \"currentColor\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieRow, \"LDSn/RF0OKQ00IWBSgUDXTz7/9k=\", false, function () {\n  return [useSelector];\n});\n\n_c = MovieRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieRow\");","map":{"version":3,"sources":["C:/Users/Vani/Documents/GitHub/FYM/frontend/src/components/movie-row.jsx"],"names":["React","useState","useEffect","axios","MovieCard","useSelector","useDispatch","MovieRow","props","user","state","userReducer","scrollable","createRef","movies","setMovies","width","setWidth","buttonsHidden","setButtonsHidden","movieCount","setMovieCount","get","then","response","data","catch","error","console","log","params","updateWindowDimensions","window","addEventListener","removeEventListener","current","clientWidth","childElementCount","innerWidth","scroll","offset","scrollLeft","setScroll","title","shouldCount","map","currentMovie","i","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MovieCard from './movie-card';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport default function MovieRow(props) {\r\n    const user = useSelector((state) => state.userReducer);\r\n    const scrollable = React.createRef(); // movie row ref\r\n    const [movies, setMovies] = useState([]); // movies state\r\n    const [width, setWidth] = useState(0); // screen width state\r\n    const [buttonsHidden, setButtonsHidden] = useState(false); // hidden state of scroll buttons\r\n    const [movieCount, setMovieCount] = useState(0); // movie count\r\n\r\n    useEffect(() => {\r\n        if (props.movies) {\r\n            // make movies request with given movie ids and setstate\r\n            axios\r\n                .get('/movies/' + props.movies)\r\n                .then((response) => {\r\n                    setMovies(response.data);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        } else {\r\n            // make movies request with given params and setstate\r\n            axios\r\n                .get('/movies', {\r\n                    params: props.params,\r\n                })\r\n                .then((response) => {\r\n                    setMovies(response.data);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n        updateWindowDimensions();\r\n\r\n        // resize event listener to get width of row\r\n        window.addEventListener('resize', updateWindowDimensions);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', updateWindowDimensions);\r\n        };\r\n    }, [props.movies]);\r\n\r\n    useEffect(() => {\r\n        setWidth(scrollable.current.clientWidth);\r\n        setMovieCount(scrollable.current.childElementCount);\r\n        setButtonsHidden(\r\n            scrollable.current.clientWidth < window.innerWidth - 200\r\n        );\r\n    }, [scrollable]);\r\n\r\n    // update width of row\r\n    function updateWindowDimensions() {\r\n        if (scrollable.current) {\r\n            setWidth(scrollable.current.clientWidth);\r\n        }\r\n    }\r\n\r\n    // scroll function for row\r\n    function scroll(offset) {\r\n        updateWindowDimensions();\r\n        if (scrollable.current) {\r\n            scrollable.current.scrollLeft += offset;\r\n        }\r\n    }\r\n\r\n    // set scroll function for row\r\n    function setScroll(offset) {\r\n        if (scrollable.current) {\r\n            scrollable.current.scrollLeft = offset;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='movie-list-section'>\r\n            <div className='p-3'>\r\n                <h2\r\n                    className='w-75 text-warning d-flex align-items-start'\r\n                    onClick={() => {\r\n                        setScroll(0);\r\n                    }}>\r\n                    <span>{props.title}</span>\r\n                    {props.shouldCount && (\r\n                        <span className='ml-4 badge badge-pill badge-warning'>\r\n                            {movieCount}\r\n                        </span>\r\n                    )}\r\n                </h2>\r\n\r\n                <div className='d-flex align-items-center justify-content-between movie-list-container'>\r\n                    <button\r\n                        className='btn mr-2 arrow btn-dark-yellow p-1'\r\n                        hidden={buttonsHidden}\r\n                        onClick={() => {\r\n                            scroll(-width);\r\n                        }}>\r\n                        <svg\r\n                            width='1.8em'\r\n                            height='1.5em'\r\n                            viewBox='0 0 16 16'\r\n                            className='bi bi-chevron-left'\r\n                            fill='currentColor'\r\n                            xmlns='http://www.w3.org/2000/svg'>\r\n                            <path\r\n                                fillRule='evenodd'\r\n                                d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'\r\n                            />\r\n                        </svg>\r\n                    </button>\r\n                    <div\r\n                        ref={scrollable}\r\n                        className={\r\n                            buttonsHidden\r\n                                ? 'movie-list pb-4 ml-5 overflow-hidden'\r\n                                : 'movie-list pb-4'\r\n                        }>\r\n                        {movies.map(function (currentMovie, i) {\r\n                            return (\r\n                                <MovieCard\r\n                                    movie={currentMovie}\r\n                                    key={props.title + currentMovie._id}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <button\r\n                        className='btn ml-2 arrow btn-dark-yellow p-1'\r\n                        hidden={buttonsHidden}\r\n                        onClick={() => {\r\n                            scroll(width);\r\n                        }}>\r\n                        <svg\r\n                            width='1.8em'\r\n                            height='1.5em'\r\n                            viewBox='0 0 16 16'\r\n                            className='bi bi-chevron-right'\r\n                            fill='currentColor'\r\n                            xmlns='http://www.w3.org/2000/svg'>\r\n                            <path\r\n                                fillRule='evenodd'\r\n                                d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'\r\n                            />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}