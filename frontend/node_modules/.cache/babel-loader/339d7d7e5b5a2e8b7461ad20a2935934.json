{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vani\\\\Documents\\\\GitHub\\\\FYM\\\\frontend\\\\src\\\\components\\\\movie-card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { setUser } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieCard(props) {\n  _s();\n\n  const history = useHistory();\n  const user = useSelector(state => state.userReducer);\n  const [isSaved, setSaved] = useState(null); // saved state\n\n  const [isLiked, setLiked] = useState(null); // liked state\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // checks if user has liked or saved movie\n    if (user.currentUser) {\n      if (user.currentUser.Liked.find(item => item === props.movie._id)) {\n        setLiked(true);\n      }\n\n      if (user.currentUser.saved.find(item => item === props.movie._id)) {\n        setSaved(true);\n      }\n    }\n  }, [user]); // onclick redirect to movie page\n\n  function cardOnClick() {\n    history.push('/movie/' + props.movie._id);\n  }\n\n  function saveClick() {\n    let params = {};\n\n    if (isSaved) {\n      setSaved(false);\n      params = {\n        id: user.currentUser._id,\n        removeSaved: props.movie._id\n      };\n    } else {\n      setSaved(true);\n      params = {\n        id: user.currentUser._id,\n        addSaved: props.movie._id\n      };\n    } // Post request to backend\n\n\n    axios({\n      method: 'put',\n      url: '/account/update',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: JSON.stringify(params)\n    }).then(res => {\n      dispatch(setUser(res.data));\n    });\n  }\n\n  function likeClick() {\n    let params = {};\n\n    if (isLiked) {\n      setLiked(false);\n      params = {\n        id: user.currentUser._id,\n        removeLiked: props.movie._id\n      };\n    } else {\n      setLiked(true);\n      params = {\n        id: user.currentUser._id,\n        addLiked: props.movie._id\n      };\n    } // Post request to backend\n\n\n    axios({\n      method: 'put',\n      url: '/account/update',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: JSON.stringify(params)\n    }).then(res => {\n      dispatch(setUser(res.data));\n    });\n  }\n\n  return props.movie ? /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: true,\n    appear: true,\n    timeout: 600,\n    classNames: \"fade\",\n    unmountOnExit: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        text: \"white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            cardOnClick();\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: props.movie.Poster\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"poster-title\",\n              title: props.movie.Title,\n              children: props.movie.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-text d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge badge-warning h-100 badge-pill w-25\",\n                title: \"IMDb Rating\",\n                children: props.movie.imdbRating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), ' ', props.movie.Metascore !== 'N/A' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge badge-success h-100 badge-pill w-25\",\n                title: \"Metascore\",\n                children: props.movie.Metascore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: isSaved === true ? 'btn btn-info' : 'btn btn-outline-info',\n              onClick: () => {\n                if (user.currentUser) {\n                  saveClick();\n                } else {\n                  history.push({\n                    pathname: '/login',\n                    state: {\n                      redirectID: props.movie._id\n                    }\n                  });\n                }\n              },\n              children: isSaved === true ? 'âœ“ Saved' : '+ For Later'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: isLiked === true ? 'btn btn-danger' : 'btn btn-outline-danger',\n              onClick: () => {\n                if (user.currentUser) {\n                  likeClick();\n                } else {\n                  history.push({\n                    pathname: '/login',\n                    state: {\n                      redirectID: props.movie._id\n                    }\n                  });\n                }\n              },\n              children: isLiked === true ? 'Liked' : 'Like'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieCard, \"i/89ugPD5sV/jxPGNykfceNDXNA=\", false, function () {\n  return [useHistory, useSelector, useDispatch];\n});\n\n_c = MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["C:/Users/Vani/Documents/GitHub/FYM/frontend/src/components/movie-card.jsx"],"names":["React","useState","useEffect","useRef","Card","Button","useHistory","CSSTransition","useSelector","useDispatch","axios","setUser","MovieCard","props","history","user","state","userReducer","isSaved","setSaved","isLiked","setLiked","dispatch","currentUser","Liked","find","item","movie","_id","saved","cardOnClick","push","saveClick","params","id","removeSaved","addSaved","method","url","headers","data","JSON","stringify","then","res","likeClick","removeLiked","addLiked","Poster","Title","imdbRating","Metascore","pathname","redirectID"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { useSelector,useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\nimport { setUser } from '../actions';\r\n\r\nexport default function MovieCard(props) {\r\n    const history = useHistory();\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [isSaved, setSaved] = useState(null); // saved state\r\n    const [isLiked, setLiked] = useState(null); // liked state\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // checks if user has liked or saved movie\r\n        if (user.currentUser) {\r\n            if (\r\n                user.currentUser.Liked.find((item) => item === props.movie._id)\r\n            ) {\r\n                setLiked(true);\r\n            }\r\n\r\n            if (\r\n                user.currentUser.saved.find((item) => item === props.movie._id)\r\n            ) {\r\n                setSaved(true);\r\n            }\r\n        }\r\n    }, [user]);\r\n\r\n    // onclick redirect to movie page\r\n    function cardOnClick() {\r\n        history.push('/movie/' + props.movie._id);\r\n    }\r\n\r\n    function saveClick() {\r\n        let params = {};\r\n\r\n        if (isSaved) {\r\n            setSaved(false);\r\n            params = {\r\n                id: user.currentUser._id,\r\n                removeSaved: props.movie._id,\r\n            };\r\n        } else {\r\n            setSaved(true);\r\n            params = {\r\n                id: user.currentUser._id,\r\n                addSaved: props.movie._id,\r\n            };\r\n        }\r\n\r\n        // Post request to backend\r\n        axios({\r\n            method: 'put',\r\n            url: '/account/update',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: JSON.stringify(params),\r\n        }).then((res) => {\r\n            dispatch(setUser(res.data));\r\n        });\r\n    }\r\n\r\n    function likeClick() {\r\n        let params = {};\r\n\r\n        if (isLiked) {\r\n            setLiked(false);\r\n\r\n            params = {\r\n                id: user.currentUser._id,\r\n                removeLiked: props.movie._id,\r\n            };\r\n        } else {\r\n            setLiked(true);\r\n\r\n            params = {\r\n                id: user.currentUser._id,\r\n                addLiked: props.movie._id,\r\n            };\r\n        }\r\n\r\n        // Post request to backend\r\n        axios({\r\n            method: 'put',\r\n            url: '/account/update',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: JSON.stringify(params),\r\n        }).then((res) => {\r\n            dispatch(setUser(res.data));\r\n        });\r\n    }\r\n\r\n    return props.movie ? (\r\n        <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            timeout={600}\r\n            classNames=\"fade\"\r\n            unmountOnExit\r\n        >\r\n            <div className=\"movie-card\">\r\n                <Card text=\"white\">\r\n                    <div\r\n                        onClick={() => {\r\n                            cardOnClick();\r\n                        }}\r\n                    >\r\n                        <Card.Header>\r\n                            <Card.Img variant=\"top\" src={props.movie.Poster} />\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title\r\n                                className=\"poster-title\"\r\n                                title={props.movie.Title}\r\n                            >\r\n                                {props.movie.Title}\r\n                            </Card.Title>\r\n\r\n                            <h5 className=\"card-text d-flex justify-content-between\">\r\n                                <span\r\n                                    className=\"badge badge-warning h-100 badge-pill w-25\"\r\n                                    title=\"IMDb Rating\"\r\n                                >\r\n                                    {props.movie.imdbRating}\r\n                                </span>{' '}\r\n                                {props.movie.Metascore !== 'N/A' ? (\r\n                                    <span\r\n                                        className=\"badge badge-success h-100 badge-pill w-25\"\r\n                                        title=\"Metascore\"\r\n                                    >\r\n                                        {props.movie.Metascore}\r\n                                    </span>\r\n                                ) : (\r\n                                    ''\r\n                                )}\r\n                            </h5>\r\n                        </Card.Body>\r\n                    </div>\r\n                    <Card.Footer>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <button\r\n                                className={\r\n                                    isSaved === true\r\n                                        ? 'btn btn-info'\r\n                                        : 'btn btn-outline-info'\r\n                                }\r\n                                onClick={() => {\r\n                                    if (user.currentUser) {\r\n                                        saveClick();\r\n                                    } else {\r\n                                        history.push({\r\n                                            pathname: '/login',\r\n                                            state: {\r\n                                                redirectID: props.movie._id,\r\n                                            },\r\n                                        });\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {isSaved === true ? 'âœ“ Saved' : '+ For Later'}\r\n                            </button>\r\n                            <button\r\n                                className={\r\n                                    isLiked === true\r\n                                        ? 'btn btn-danger'\r\n                                        : 'btn btn-outline-danger'\r\n                                }\r\n                                onClick={() => {\r\n                                    if (user.currentUser) {\r\n                                        likeClick();\r\n                                    } else {\r\n                                        history.push({\r\n                                            pathname: '/login',\r\n                                            state: {\r\n                                                redirectID: props.movie._id,\r\n                                            },\r\n                                        });\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {isLiked === true ? 'Liked' : 'Like'}\r\n                            </button>\r\n                        </div>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </div>\r\n        </CSSTransition>\r\n    ) : (\r\n        <div></div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}